{"version":3,"sources":["Chart.js","App.js","index.js"],"names":["ChartTicker","props","width","height","chartType","loader","data","dats","options","hAxis","title","vAxis","rootProps","socket","socketIOClient","path","App","useState","updates","setUpdates","exchanges","setExchanges","stocks","setStocks","buy","setBuy","sell","setSell","view","setView","stamp","setStamp","dat","setDat","conn","setConn","useEffect","Date","now","on","emit","current","Total_buy_stock","ticker1","filter","ticker","reduce","prevValue","currentValue","volume","Total_sell_stock","Get_ticker","company_name1","length","company_name","Exchange_Buy","companies","Exchange_Sell","StyledTableCell","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","classes","makeStyles","table","minWidth","flexGrow","formControl","margin","spacing","useStyles","style","display","justifyContent","alignItems","Button","variant","onClick","console","log","connected","connect","disconnect","FormControl","className","InputLabel","htmlFor","Select","native","onChange","e","target","value","map","x","Chart","time","Math","abs","toFixed","Paper","Tabs","indicatorColor","textColor","centered","Tab","label","TableContainer","component","Table","aria-label","TableHead","align","TableBody","Object","values","key","scope","country","max","p","quote_base","min","Infinity","Min_value","total","Last_value","x1","x2","Percentage_value","exchange_ticker","listed_companies","tot_sell","Total_volume","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69c04875.chunk.js","sourcesContent":["import React from 'react';\r\nimport Chart from 'react-google-charts'\r\n\r\n\r\nfunction ChartTicker (props){\r\n\r\n            return(\r\n                <div>\r\n                    <Chart\r\n                        width={'700px'}\r\n                        height={'400px'}\r\n                        chartType=\"LineChart\"\r\n                        loader={<div>El gráfico se está cargando</div>}\r\n                        data={props.dats}\r\n                        options={{\r\n                        hAxis: {\r\n                            title: 'Tiempo(segundos)',\r\n                        },\r\n                        vAxis: {\r\n                            title: 'Precio(USD)',\r\n                        },\r\n                        }}\r\n                        rootProps={{ 'data-testid': '1' }}\r\n                        />\r\n                </div>\r\n            )\r\n        \r\n}\r\n\r\nexport default ChartTicker","import React, {useEffect, useState, useCallback} from 'react';\nimport './App.css';\nimport ChartTicker from './Chart'\nimport socketIOClient from 'socket.io-client'\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nconst socket = socketIOClient('wss://le-18262636.bitzonte.com', {\n  path: '/stocks'\n  })\n\nfunction App() {\n\n  const [updates,setUpdates] = useState([])\n  const [exchanges, setExchanges] = useState([])\n  const [stocks, setStocks] = useState([])\n  const [buy, setBuy] = useState([])\n  const [sell, setSell] =  useState([])\n  const [view, setView] = useState('Selecciona una acción')\n  const [stamp,setStamp] = useState(0)\n  const [dat, setDat] = useState('INFO')\n  const [conn, setConn] =useState(true)\n\n  useEffect(() => {\n    setStamp(Date.now())\n    socket.on('connect', ()=>\n    {socket.emit('EXCHANGES')\n    socket.emit('STOCKS')})\n    \n    socket.on('EXCHANGES', (data)=>{ \n      setExchanges(data)\n      })\n    \n    socket.on('STOCKS', (data)=>{ \n      setStocks(data)\n      })\n\n    socket.on('UPDATE', (data)=>{ \n      setUpdates(current => [...current, data])\n      })\n\n    socket.on('BUY', (data)=>{ \n      setBuy(current => [...current, data])\n      })\n\n    socket.on('SELL', (data)=>{ \n      setSell(current => [...current, data])\n      })\n        }, [])\n\n  const conectar = () => {\n    socket.on('connect', ()=> console.log(socket.connected + \"in func con\"))\n    socket.connect()\n    setConn(true)\n  }\n\n  const desconectar = () => {\n    socket.on('disconnect', ()=> console.log(socket.connected + \"in func discon\"))\n    // setStocks([])\n    // setExchanges({})\n    setConn(false)\n    socket.disconnect()\n  }\n\n  const Total_buy_stock = (ticker1) => {\n    const total = buy\n    .filter(({ticker}) => ticker === ticker1)\n    .reduce((prevValue, currentValue) => prevValue + currentValue.volume, 0);\n    return total;\n  };\n\n  const Total_sell_stock = (ticker1) => {\n    const total = sell\n    .filter(({ticker}) => ticker === ticker1)\n    .reduce((prevValue, currentValue) => prevValue + currentValue.volume, 0);\n    return total;\n  };\n\n  const Max_value = (ticker1) => {\n    const total = updates\n    .filter(({ticker}) => ticker === ticker1)\n    .reduce((max, p) => p.value > max ? p.value : max, 0);\n    return total;\n  };\n\n  const Min_value = (ticker1) => {\n    const total = updates\n    .filter(({ticker}) => ticker === ticker1)\n    .reduce((min, p) => p.value < min ? p.value : min, Infinity);\n    return total;\n  };\n\n  const Last_value = (ticker1) => {\n    const total = updates.filter(({ticker}) => ticker === ticker1)\n    if (total.length > 0) {\n      const x = total[total.length - 1]\n      return x.value;\n    }\n    return 0\n  };\n\n  const Percentage_value = (ticker1) => {\n    const total = updates.filter(({ticker}) => ticker === ticker1)\n    if (total.length > 2) {\n      const x1 = total[total.length - 1]\n      const x2 = total[total.length - 2]\n      return ((x2.value - x1.value) * 100/x2.value).toFixed(2);\n    }\n    return 0\n  };\n\n  const Get_ticker = (company_name1) => {\n    if (stocks.length > 0) {\n      const total = stocks.filter(({company_name}) => company_name === company_name1)\n      return total[0].ticker\n    }\n    return ''\n  }\n\n  const Exchange_Buy = (companies) => {\n    if (companies.length > 0) {\n      const total = companies.reduce((prevValue, currentValue) => prevValue + Total_buy_stock(Get_ticker(currentValue)) , 0);\n      return total\n    }\n    return 0\n  }\n\n  const Exchange_Sell = (companies) => {\n    if (companies.length > 0) {\n      const total = companies.reduce((prevValue, currentValue) => prevValue + Total_sell_stock(Get_ticker(currentValue)) , 0);\n      return total\n    }\n    return 0\n  }\n\n  const Total_volume = () => {\n    let tot_sell = sell.reduce((prevValue, currentValue) => prevValue + currentValue.volume, 0);\n    let tot_buy = buy.reduce((prevValue, currentValue) => prevValue + currentValue.volume, 0);\n    return tot_buy + tot_sell\n  }\n\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: '#173F8A',\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n  \n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n  \n  \n  const useStyles = makeStyles((theme) => ({\n    table: {\n      minWidth: 700,\n    },\n    root: {\n      flexGrow: 1,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    }\n  }));\n  \n  const classes = useStyles();\n  \n\n\n  return (\n    <div>\n      <header style={{display: 'flex',  justifyContent:'center', alignItems:'center', backgroundColor:'#173F8A', color:\"white\"}}>\n      <h1> Tarea 3 - Websockets</h1> \n\n      </header>  \n      <nav style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}> \n        <Button style={{margin:20}}  variant=\"contained\" color=\"primary\" onClick={conectar}> conectar</Button> \n        <br/>\n        <Button variant=\"contained\" color=\"secondary\"onClick={desconectar}> desconectar </Button> \n      </nav>\n\n  <h2 style={{color:'#173F8A', alignItems:'center', justifyContent:'center', display: 'flex'}}> \n  Estás: {conn? \"Conectado/a\":\"Desconectado/a\"}</h2>\n\n\n\n      <section >\n        <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n\n      <div>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Accion</InputLabel>\n        <Select\n          native\n          onChange={e => setView(e.target.value)}\n        >\n        <option value='Selecciona una acción' >Selecciona una acción</option>\n        {stocks.map(x => <option value={x.ticker}>{x.ticker}</option>)} \n        </Select>\n      </FormControl>\n      <br/>\n      <br/>\n      <br/>\n\n      {view == 'Selecciona una acción'?\n      null:\n      <div style={{color:'#173F8A'}}>\n      <h2 > Estás viendo <br/>el gráfico de: <br/> </h2>\n      <h1>{view}</h1>\n      </div>\n      }\n      </div>\n\n      { view == \"Selecciona una acción\"?\n      <ChartTicker dats={[['x', \"Selecciona una acción\"], [0,0]]} />\n      :\n      <ChartTicker dats={[['x', view], ...updates.filter(({ticker}) => ticker === view)\n      .map(({time, value}) => ([Math.abs(((time - stamp)/1000).toFixed(1)), value]))]} />\n      }\n      </div>\n    </section>\n\n\n      <section >\n\n      <Paper className={classes.root}>\n      <Tabs\n        value={dat}\n        onChange={(e,x) => setDat(x)}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        centered\n      >\n        <Tab value=\"INFO\" label=\"STOCKS INFO\" />\n        <Tab value=\"STOCKS\" label=\"STOCK STATS\" />\n        <Tab value=\"EXCHANGE\" label=\"EXCHANGE STATS\" />\n      </Tabs>\n      </Paper>\n\n\n    {\n      dat == \"INFO\"?\n      <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Nombre de <br/> la empresa</StyledTableCell>\n            <StyledTableCell align=\"right\">Ticker</StyledTableCell>\n            <StyledTableCell align=\"right\">País de origen</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {Object.values(stocks).map(x => \n            <StyledTableRow key={x.company_name}>\n              <StyledTableCell component=\"th\" scope=\"row\">{x.company_name} </StyledTableCell>\n              <StyledTableCell align=\"right\">{x.ticker}</StyledTableCell>\n              <StyledTableCell align=\"right\">{x.country} </StyledTableCell>\n            </StyledTableRow>\n        )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n      :\n      dat == \"STOCKS\"?\n      <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>STOCKS/<br/>DATA</StyledTableCell>\n            <StyledTableCell align=\"right\">Volumen Total</StyledTableCell>\n            <StyledTableCell align=\"right\">Max Valor</StyledTableCell>\n            <StyledTableCell align=\"right\">Min valor</StyledTableCell>\n            <StyledTableCell align=\"right\">Último precio</StyledTableCell>\n            <StyledTableCell align=\"right\">Variación porcentual</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        {stocks.map(x =>\n            <StyledTableRow key={x.ticker}>\n              <StyledTableCell component=\"th\" scope=\"row\">{x.ticker} </StyledTableCell>\n              <StyledTableCell align=\"right\">{Total_buy_stock(x.ticker) + Total_sell_stock(x.ticker)}</StyledTableCell>\n              <StyledTableCell align=\"right\">{Max_value(x.ticker)} {x.quote_base} </StyledTableCell>\n              <StyledTableCell align=\"right\">{Min_value(x.ticker)} {x.quote_base}</StyledTableCell>\n              <StyledTableCell align=\"right\">{Last_value(x.ticker)} {x.quote_base}</StyledTableCell>\n              <StyledTableCell align=\"right\">{Percentage_value(x.ticker)} %</StyledTableCell>\n            </StyledTableRow>\n        )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    :\n    <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>EXCHANGES/<br/>DATA</StyledTableCell>\n                <StyledTableCell align=\"right\">Volumen <br/>Compra</StyledTableCell>\n                <StyledTableCell align=\"right\">Volumen<br/> Venta</StyledTableCell>\n                <StyledTableCell align=\"right\">Volumen<br/> Total</StyledTableCell>\n                <StyledTableCell align=\"right\">Cantidad <br/>Acciones</StyledTableCell>\n                <StyledTableCell align=\"right\">Participación <br/>de Mercado</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n            {Object.values(exchanges).map(x => \n                <StyledTableRow key={x.exchange_ticker}>\n                  <StyledTableCell component=\"th\" scope=\"row\">{x.exchange_ticker} </StyledTableCell>\n                  <StyledTableCell align=\"right\">{Exchange_Buy(x.listed_companies)}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{Exchange_Sell(x.listed_companies)}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{Exchange_Sell(x.listed_companies) + Exchange_Buy(x.listed_companies)}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{x.listed_companies.length}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{((Exchange_Sell(x.listed_companies) + Exchange_Buy(x.listed_companies))*100/ Total_volume()).toFixed(2)} %</StyledTableCell>\n                </StyledTableRow>\n                    )} \n            </TableBody>\n          </Table>\n        </TableContainer>\n    }\n      \n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}